[{"path":"/articles/mat_fill.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"mat_fill","text":"","code":"mat1 <- matrix(c(1,1,1,2, 0,2,3,0, NA,3,0,0, 5,0,0,0), ncol = 4) mat2 <- matrix(c(1,1,1,2, \"a\",2,3,NA, \"a\",\"a\",0,0, \"a\",\"a\",\"a\",0), ncol = 4) mat3 <- matrix(c(0,0,0,2, 0,0,3,0, 0,3,0,NA, 5,0,0,0), ncol = 4) mat4 <- matrix(c(0,0,0,2, 0,0,3,0, 0,3,0,0, 5,0,0,0), ncol = 4)"},{"path":"/articles/mat_fill.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"mat_fill","text":"","code":"mat1 >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3    0 > [3,]    1    3    0    0 > [4,]    2    0    0    0 mat2 >      [,1] [,2] [,3] [,4] > [1,] \"1\"  \"a\"  \"a\"  \"a\"  > [2,] \"1\"  \"2\"  \"a\"  \"a\"  > [3,] \"1\"  \"3\"  \"0\"  \"a\"  > [4,] \"2\"  NA   \"0\"  \"0\" mat3 >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]    0    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0   NA    0 mat4 >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]    0    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0    0    0"},{"path":"/articles/mat_fill.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"mat_fill","text":"","code":"mat_fill(mat = mat1) > $mat >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3   NA > [3,]    1    3    2    0 > [4,]    2    1    1    1 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0\\n\\n(2) BOTTOMRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\" mat_fill(mat = mat2) > $mat >      [,1] [,2] [,3] [,4] > [1,] \"1\"  \"a\"  \"a\"  \"a\"  > [2,] \"1\"  \"2\"  \"a\"  \"a\"  > [3,] \"1\"  \"3\"  \"0\"  \"a\"  > [4,] \"2\"  NA   \"0\"  \"0\"  >  > $warn > [1] \"(1) ACCORDING TO empty.cell.string ARGUMENT (0), mat ARGUMENT MATRIX HAS ZERO EMPTY HALF PART\" mat_fill(mat = mat3) > $mat >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]   NA    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0   NA    0 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0\\n\\n(2) TOPLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\""},{"path":"/articles/mat_fill.html","id":"argument-empty-cell-string","dir":"Articles","previous_headings":"","what":"Argument empty.cell.string","title":"mat_fill","text":"","code":"mat_fill(mat = mat1, empty.cell.string = 0) > $mat >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3   NA > [3,]    1    3    2    0 > [4,]    2    1    1    1 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0\\n\\n(2) BOTTOMRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\" mat_fill(mat = mat2, empty.cell.string = \"a\") > $mat >      [,1] [,2] [,3] [,4] > [1,] \"1\"  \"1\"  \"1\"  \"2\"  > [2,] \"1\"  \"2\"  \"3\"  NA   > [3,] \"1\"  \"3\"  \"0\"  \"0\"  > [4,] \"2\"  NA   \"0\"  \"0\"  >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE TOPRIGHT CORNER, FULL OF a\\n\\n(2) TOPRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\" mat_fill(mat = mat3, empty.cell.string = 0) > $mat >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]   NA    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0   NA    0 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0\\n\\n(2) TOPLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\""},{"path":"/articles/mat_fill.html","id":"argument-warn-print","dir":"Articles","previous_headings":"","what":"Argument warn.print","title":"mat_fill","text":"","code":"mat_fill(mat = mat1, warn.print = TRUE) > Warning: FROM mat_fill(): >  > (1) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0 >  > (2) BOTTOMRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL > $mat >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3   NA > [3,]    1    3    2    0 > [4,]    2    1    1    1 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0\\n\\n(2) BOTTOMRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\"  mat_fill(mat = mat2, warn.print = TRUE) > Warning: FROM mat_fill(): >  > (1) ACCORDING TO empty.cell.string ARGUMENT (0), mat ARGUMENT MATRIX HAS ZERO EMPTY HALF PART > $mat >      [,1] [,2] [,3] [,4] > [1,] \"1\"  \"a\"  \"a\"  \"a\"  > [2,] \"1\"  \"2\"  \"a\"  \"a\"  > [3,] \"1\"  \"3\"  \"0\"  \"a\"  > [4,] \"2\"  NA   \"0\"  \"0\"  >  > $warn > [1] \"(1) ACCORDING TO empty.cell.string ARGUMENT (0), mat ARGUMENT MATRIX HAS ZERO EMPTY HALF PART\"  mat_fill(mat = mat3, warn.print = TRUE) > Warning: FROM mat_fill(): >  > (1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0 >  > (2) TOPLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL > $mat >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]   NA    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0   NA    0 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0\\n\\n(2) TOPLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\""},{"path":"/articles/mat_fill.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"mat_fill","text":"","code":"# bottomright example mat_fill(mat = mat1, empty.cell.string = 0, warn.print = TRUE)  > Warning: FROM mat_fill(): >  > (1) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0 >  > (2) BOTTOMRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL > $mat >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3   NA > [3,]    1    3    2    0 > [4,]    2    1    1    1 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0\\n\\n(2) BOTTOMRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\"  # topright example mat_fill(mat = mat2, empty.cell.string = \"a\", warn.print = TRUE)  > Warning: FROM mat_fill(): >  > (1) EMPTY SECTOR DETECTED ON THE TOPRIGHT CORNER, FULL OF a >  > (2) TOPRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL > $mat >      [,1] [,2] [,3] [,4] > [1,] \"1\"  \"1\"  \"1\"  \"2\"  > [2,] \"1\"  \"2\"  \"3\"  NA   > [3,] \"1\"  \"3\"  \"0\"  \"0\"  > [4,] \"2\"  NA   \"0\"  \"0\"  >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE TOPRIGHT CORNER, FULL OF a\\n\\n(2) TOPRIGHT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\"  # topleft example mat_fill(mat = mat3, empty.cell.string = 0, warn.print = TRUE)  > Warning: FROM mat_fill(): >  > (1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0 >  > (2) TOPLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL > $mat >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]   NA    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0   NA    0 >  > $warn > [1] \"(1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0\\n\\n(2) TOPLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\""},{"path":"/articles/mat_fill.html","id":"error-examples","dir":"Articles","previous_headings":"","what":"Error examples","title":"mat_fill","text":"","code":"mat_fill(mat = mat1, empty.cell.string = NA, warn.print = TRUE)  > Warning: FROM mat_fill(): >  > (1) ACCORDING TO empty.cell.string ARGUMENT (NA), mat ARGUMENT MATRIX HAS ZERO EMPTY HALF PART > $mat >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3    0 > [3,]    1    3    0    0 > [4,]    2    0    0    0 >  > $warn > [1] \"(1) ACCORDING TO empty.cell.string ARGUMENT (NA), mat ARGUMENT MATRIX HAS ZERO EMPTY HALF PART\"  mat_fill(mat = mat4, empty.cell.string = 0, warn.print = TRUE)  > Error:  >  > ================ >  > ERROR IN mat_fill() OF THE saferMatrix PACKAGE: ACCORDING TO empty.cell.string ARGUMENT (0), mat ARGUMENT MATRIX HAS MORE THAN ONE EMPTY HALF PART (ACCORDING TO THE GRAND DIAGONAL): topleft bottomright >  > ================ >  > IN ADDITION > WARNINGS: >  > (1) EMPTY SECTOR DETECTED ON THE TOPLEFT CORNER, FULL OF 0 >  > (2) EMPTY SECTOR DETECTED ON THE BOTTOMRIGHT CORNER, FULL OF 0"},{"path":"/articles/mat_inv.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"mat_inv","text":"","code":"mat1 <- matrix(c(0,0,0,0,0,0,0,0,0), ncol = 3) mat2 <- matrix(c(1,1,1,2,Inf,5,9,8,9), ncol = 3) mat3 <- matrix(c(1,1,1,2,NA,5,9,8,9), ncol = 3) mat4 <- matrix(c(1,2), ncol = 1) mat5 <- matrix(0, ncol = 1)"},{"path":"/articles/mat_inv.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"mat_inv","text":"","code":"mat1 >      [,1] [,2] [,3] > [1,]    0    0    0 > [2,]    0    0    0 > [3,]    0    0    0 mat2 >      [,1] [,2] [,3] > [1,]    1    2    9 > [2,]    1  Inf    8 > [3,]    1    5    9 mat3 >      [,1] [,2] [,3] > [1,]    1    2    9 > [2,]    1   NA    8 > [3,]    1    5    9 mat4 >      [,1] > [1,]    1 > [2,]    2 mat5 >      [,1] > [1,]    0"},{"path":"/articles/mat_inv.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"mat_inv","text":"","code":"mat_inv(mat = mat1) # use the trick >      [,1] [,2] [,3] > [1,]    0    0    0 > [2,]    0    0    0 > [3,]    0    0    0"},{"path":"/articles/mat_inv.html","id":"error-examples","dir":"Articles","previous_headings":"","what":"Error examples","title":"mat_inv","text":"","code":"# examples with errors because of Inf and NA mat_inv(mat = mat2) > Error:  >  > ================ >  > ERROR IN mat_inv() OF THE saferMatrix PACKAGE: mat ARGUMENT MUST BE A MATRIX WITHOUT Inf, -Inf OR NA >  > ================ mat_inv(mat = mat3) > Error:  >  > ================ >  > ERROR IN mat_inv(): THE mat OBJECT CONTAINS NA WHILE NOT AUTHORIZED >  > ================  # example with error because not a square matrix mat_inv(mat = mat4) > Error:  >  > ================ >  > ERROR IN mat_inv() OF THE saferMatrix PACKAGE: mat ARGUMENT MUST BE A SQUARE MATRIX >  > ================  # example with error because cannot be a square matrix made of a single case of 0 mat_inv(mat = mat5)  > Error:  >  > ================ >  > ERROR IN mat_inv() OF THE saferMatrix PACKAGE: mat ARGUMENT CANNOT BE A SQUARE MATRIX MADE OF A SINGLE CASE OF 0 >  > ================"},{"path":"/articles/mat_num2color.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"mat_num2color","text":"","code":"mat1 <- matrix(c(1,1,1,2, 5,2,3,NA, 5,5,1,1, 5,5,5,1), ncol = 4) mat2 <- matrix(c(1/3,1/3,1/3,1/7, 1/3,1/3,1/9,1/3, 1/3,1/7,1/3,1/3, 1/9,1/3,1/3,1/3), ncol = 4)"},{"path":"/articles/mat_num2color.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"mat_num2color","text":"","code":"mat1 >      [,1] [,2] [,3] [,4] > [1,]    1    5    5    5 > [2,]    1    2    5    5 > [3,]    1    3    1    5 > [4,]    2   NA    1    1 mat2 >           [,1]      [,2]      [,3]      [,4] > [1,] 0.3333333 0.3333333 0.3333333 0.1111111 > [2,] 0.3333333 0.3333333 0.1428571 0.3333333 > [3,] 0.3333333 0.1111111 0.3333333 0.3333333 > [4,] 0.1428571 0.3333333 0.3333333 0.3333333"},{"path":"/articles/mat_num2color.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"mat_num2color","text":"","code":"mat_num2color(mat1 = mat2) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"#FFAA00\" > [2,] \"#00FF00\" \"#00FF00\" \"#FFDB00\" \"#00FF00\" > [3,] \"#00FF00\" \"#FFAA00\" \"#00FF00\" \"#00FF00\" > [4,] \"#FFDB00\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > NULL >  > $text.problem > NULL"},{"path":"/articles/mat_num2color.html","id":"argument-mat-hsv-h","dir":"Articles","previous_headings":"","what":"Argument mat.hsv.h","title":"mat_num2color","text":"","code":"mat_num2color(mat1 = mat1, mat.hsv.h = FALSE) > $mat1.name > [1] \"mat1\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#CCFF00\" \"#FF0000\" \"#FF0000\" \"#FF0000\" > [2,] \"#CCFF00\" \"#00FF66\" \"#FF0000\" \"#FF0000\" > [3,] \"#CCFF00\" \"#0066FF\" \"#CCFF00\" \"#FF0000\" > [4,] \"#00FF66\" NA        \"#CCFF00\" \"#CCFF00\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, mat.hsv.h = TRUE) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"#FFAA00\" > [2,] \"#00FF00\" \"#00FF00\" \"#FFDB00\" \"#00FF00\" > [3,] \"#00FF00\" \"#FFAA00\" \"#00FF00\" \"#00FF00\" > [4,] \"#FFDB00\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > NULL >  > $text.problem > NULL"},{"path":"/articles/mat_num2color.html","id":"argument-notch","dir":"Articles","previous_headings":"","what":"Argument notch","title":"mat_num2color","text":"","code":"mat_num2color(mat1 = mat2, notch = 0.2) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"#00EEFF\" > [2,] \"#00FF00\" \"#00FF00\" \"#00FF0F\" \"#00FF00\" > [3,] \"#00FF00\" \"#00EEFF\" \"#00FF00\" \"#00FF00\" > [4,] \"#00FF0F\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, notch = 0.5) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"#FFAA00\" > [2,] \"#00FF00\" \"#00FF00\" \"#0024FF\" \"#00FF00\" > [3,] \"#00FF00\" \"#FFAA00\" \"#00FF00\" \"#00FF00\" > [4,] \"#0024FF\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, notch = 0.7) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"#00EEFF\" > [2,] \"#00FF00\" \"#00FF00\" \"#FF00F0\" \"#00FF00\" > [3,] \"#00FF00\" \"#00EEFF\" \"#00FF00\" \"#00FF00\" > [4,] \"#FF00F0\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > NULL >  > $text.problem > NULL"},{"path":"/articles/mat_num2color.html","id":"argument-s","dir":"Articles","previous_headings":"","what":"Argument s","title":"mat_num2color","text":"","code":"mat_num2color(mat1 = mat2, s = 0.2) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#CCFFCC\" \"#CCFFCC\" \"#CCFFCC\" \"#FFEECC\" > [2,] \"#CCFFCC\" \"#CCFFCC\" \"#FFF8CC\" \"#CCFFCC\" > [3,] \"#CCFFCC\" \"#FFEECC\" \"#CCFFCC\" \"#CCFFCC\" > [4,] \"#FFF8CC\" \"#CCFFCC\" \"#CCFFCC\" \"#CCFFCC\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, s = 0.2) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#CCFFCC\" \"#CCFFCC\" \"#CCFFCC\" \"#FFEECC\" > [2,] \"#CCFFCC\" \"#CCFFCC\" \"#FFF8CC\" \"#CCFFCC\" > [3,] \"#CCFFCC\" \"#FFEECC\" \"#CCFFCC\" \"#CCFFCC\" > [4,] \"#FFF8CC\" \"#CCFFCC\" \"#CCFFCC\" \"#CCFFCC\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, s = 0.2) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#CCFFCC\" \"#CCFFCC\" \"#CCFFCC\" \"#FFEECC\" > [2,] \"#CCFFCC\" \"#CCFFCC\" \"#FFF8CC\" \"#CCFFCC\" > [3,] \"#CCFFCC\" \"#FFEECC\" \"#CCFFCC\" \"#CCFFCC\" > [4,] \"#FFF8CC\" \"#CCFFCC\" \"#CCFFCC\" \"#CCFFCC\" >  > $problem > NULL >  > $text.problem > NULL"},{"path":"/articles/mat_num2color.html","id":"argument-v","dir":"Articles","previous_headings":"","what":"Argument v","title":"mat_num2color","text":"","code":"mat_num2color(mat1 = mat2, v = 0.2) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#003300\" \"#003300\" \"#003300\" \"#332200\" > [2,] \"#003300\" \"#003300\" \"#332C00\" \"#003300\" > [3,] \"#003300\" \"#332200\" \"#003300\" \"#003300\" > [4,] \"#332C00\" \"#003300\" \"#003300\" \"#003300\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, v = 0.5) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#008000\" \"#008000\" \"#008000\" \"#805500\" > [2,] \"#008000\" \"#008000\" \"#806D00\" \"#008000\" > [3,] \"#008000\" \"#805500\" \"#008000\" \"#008000\" > [4,] \"#806D00\" \"#008000\" \"#008000\" \"#008000\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(mat1 = mat2, v = 0.7) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00B300\" \"#00B300\" \"#00B300\" \"#B37700\" > [2,] \"#00B300\" \"#00B300\" \"#B39900\" \"#00B300\" > [3,] \"#00B300\" \"#B37700\" \"#00B300\" \"#00B300\" > [4,] \"#B39900\" \"#00B300\" \"#00B300\" \"#00B300\" >  > $problem > NULL >  > $text.problem > NULL"},{"path":"/articles/mat_num2color.html","id":"argument-forced-color","dir":"Articles","previous_headings":"","what":"Argument forced.color","title":"mat_num2color","text":"","code":"mat_num2color(mat1 = mat2, forced.color = \"snow\") > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"snow\"    > [2,] \"#00FF00\" \"#00FF00\" \"#FFDB00\" \"#00FF00\" > [3,] \"#00FF00\" \"snow\"    \"#00FF00\" \"#00FF00\" > [4,] \"#FFDB00\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > [1] FALSE >  > $text.problem > NULL"},{"path":"/articles/mat_num2color.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"mat_num2color","text":"","code":"mat_num2color(         mat1 = mat1,          mat.hsv.h = FALSE,          notch = 1,          s = 1,          v = 1,          forced.color = NULL ) > $mat1.name > [1] \"mat1\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#CCFF00\" \"#FF0000\" \"#FF0000\" \"#FF0000\" > [2,] \"#CCFF00\" \"#00FF66\" \"#FF0000\" \"#FF0000\" > [3,] \"#CCFF00\" \"#0066FF\" \"#CCFF00\" \"#FF0000\" > [4,] \"#00FF66\" NA        \"#CCFF00\" \"#CCFF00\" >  > $problem > NULL >  > $text.problem > NULL  mat_num2color(         mat1 = mat2,          mat.hsv.h = TRUE,          notch = 1,          s = 1,          v = 1,          forced.color = NULL ) > $mat1.name > [1] \"mat2\" >  > $colored.mat >      [,1]      [,2]      [,3]      [,4]      > [1,] \"#00FF00\" \"#00FF00\" \"#00FF00\" \"#FFAA00\" > [2,] \"#00FF00\" \"#00FF00\" \"#FFDB00\" \"#00FF00\" > [3,] \"#00FF00\" \"#FFAA00\" \"#00FF00\" \"#00FF00\" > [4,] \"#FFDB00\" \"#00FF00\" \"#00FF00\" \"#00FF00\" >  > $problem > NULL >  > $text.problem > NULL"},{"path":"/articles/mat_op.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"mat_op","text":"","code":"mat1 <- matrix(c(1,1,1,2,1,5,9,8), ncol = 2, dimnames = list(LETTERS[1:4], letters[1:2])) mat2 <- matrix(c(1,1,1,2,1,5,9,NA), ncol = 2, dimnames = list(LETTERS[1:4], letters[1:2])) mat3 <- matrix(c(1,1,1,2,1,5,9,8), ncol = 2, dimnames = list(LETTERS[1:4], c(NA, NA))) mat4 <- matrix(c(1,1,1,2,1,5,9,8), ncol = 2, dimnames = list(c(\"A1\", \"A2\", \"A3\", \"A4\"), letters[1:2]))"},{"path":"/articles/mat_op.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"mat_op","text":"","code":"mat1 >   a b > A 1 1 > B 1 5 > C 1 9 > D 2 8 mat2 >   a  b > A 1  1 > B 1  5 > C 1  9 > D 2 NA mat3 >   <NA> <NA> > A    1    1 > B    1    5 > C    1    9 > D    2    8 mat4 >    a b > A1 1 1 > A2 1 5 > A3 1 9 > A4 2 8"},{"path":"/articles/mat_op.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"mat_op","text":"","code":"mat_op(mat.list = list(mat1, mat2)) >   a  b > A 2  2 > B 2 10 > C 2 18 > D 4 NA mat_op(mat.list = list(mat2, mat3)) >   [,1] [,2] > A    2    2 > B    2   10 > C    2   18 > D    4   NA mat_op(mat.list = list(mat2, mat2, mat4)) >      a  b > [1,] 3  3 > [2,] 3 15 > [3,] 3 27 > [4,] 6 NA"},{"path":"/articles/mat_op.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"mat_op","text":"","code":"mat_op(mat.list = list(mat1, mat2), kind.of.operation = \"*\") >   a  b > A 1  1 > B 1 25 > C 1 81 > D 4 NA mat_op(mat.list = list(mat2, mat3), kind.of.operation = \"-\") >   [,1] [,2] > A    0    0 > B    0    0 > C    0    0 > D    0   NA mat_op(mat.list = list(mat2, mat2, mat4), kind.of.operation = \"+\") >      a  b > [1,] 3  3 > [2,] 3 15 > [3,] 3 27 > [4,] 6 NA"},{"path":"/articles/mat_rotate.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"mat_rotate","text":"","code":"mat1 <- matrix(c(1,1,1,2, 0,2,3,0, NA,3,0,0, 5,0,0,0), ncol = 4) mat2 <- matrix(c(1,1,1,2, \"a\",2,3,NA, \"a\",\"a\",0,0, \"a\",\"a\",\"a\",0), ncol = 4) mat3 <- matrix(c(0,0,0,2, 0,0,3,0, 0,3,0,NA, 5,0,0,0), ncol = 4) mat4 <- matrix(c(0,0,0,2, 0,0,3,0, 0,3,0,0, 5,0,0,0), ncol = 4)"},{"path":"/articles/mat_rotate.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"mat_rotate","text":"","code":"mat1 >      [,1] [,2] [,3] [,4] > [1,]    1    0   NA    5 > [2,]    1    2    3    0 > [3,]    1    3    0    0 > [4,]    2    0    0    0 mat2 >      [,1] [,2] [,3] [,4] > [1,] \"1\"  \"a\"  \"a\"  \"a\"  > [2,] \"1\"  \"2\"  \"a\"  \"a\"  > [3,] \"1\"  \"3\"  \"0\"  \"a\"  > [4,] \"2\"  NA   \"0\"  \"0\" mat3 >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]    0    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0   NA    0 mat4 >      [,1] [,2] [,3] [,4] > [1,]    0    0    0    5 > [2,]    0    0    3    0 > [3,]    0    3    0    0 > [4,]    2    0    0    0"},{"path":"/articles/mat_rotate.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"mat_rotate","text":"","code":"mat_rotate(data = mat1) >      [,1] [,2] [,3] [,4] > [1,]    2    1    1    1 > [2,]    0    3    2    0 > [3,]    0    0    3   NA > [4,]    0    0    0    5 mat_rotate(data = mat2) >      [,1] [,2] [,3] [,4] > [1,] \"2\"  \"1\"  \"1\"  \"1\"  > [2,] NA   \"3\"  \"2\"  \"a\"  > [3,] \"0\"  \"0\"  \"a\"  \"a\"  > [4,] \"0\"  \"a\"  \"a\"  \"a\" mat_rotate(data = mat3) >      [,1] [,2] [,3] [,4] > [1,]    2    0    0    0 > [2,]    0    3    0    0 > [3,]   NA    0    3    0 > [4,]    0    0    0    5 mat_rotate(data = mat4) >      [,1] [,2] [,3] [,4] > [1,]    2    0    0    0 > [2,]    0    3    0    0 > [3,]    0    0    3    0 > [4,]    0    0    0    5"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haiding Wang. Author, contributor. Yushi Han. Author, contributor. Gael Millot. Maintainer, author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang H, Han Y, Millot G (2024). saferMatrix: Matrix handling. R package version 1.0.","code":"@Manual{,   title = {saferMatrix: Matrix handling},   author = {Haiding Wang and Yushi Han and Gael Millot},   year = {2024},   note = {R package version 1.0}, }"},{"path":[]},{"path":"/index.html","id":"table-of-content","dir":"","previous_headings":"","what":"Table of content","title":"Matrix handling","text":"Description Content Versions Installation Licence Citations Credits Acknowledgements","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Matrix handling","text":"Set R functions development R functions, written according safer project specifications.","code":""},{"path":"/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"Matrix handling","text":"Read vignette(\"saferMatrix\") details.","code":""},{"path":"/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"Matrix handling","text":"different saferMatrix releases tagged .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Matrix handling","text":"saferMatrix can currently installed GitHub: Older versions can installed like :","code":"install.packages(\"remotes\") remotes::install_github(\"https://github.com/safer-r/saferMatrix\") v <- \"v1.0\" # desired tag version remotes::install_github(paste0(\"https://github.com/safer-r/saferMatrix/tree/\", v))"},{"path":"/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"Matrix handling","text":"package can redistributed /modified terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. Distributed hope useful, without warranty; without even implied warranty merchandability fitness particular purpose. See GNU General Public License details https://www.gnu.org/licenses Licence.txt attached file.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Matrix handling","text":"using functions saferMatrix, please cite: Wang H, Han Y, Serizay J, Millot GA (2023). R saferMatrix package. https://github.com/safer-r/saferMatrix/.","code":""},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Matrix handling","text":"Haiding Wang, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Yushi Han, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Jacques Serizai, Spatial Regulation Genomes team, Institut Pasteur, Paris, France Gael . Millot, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Matrix handling","text":"developers & maintainers mentioned softwares packages, including: R Git Github","code":""},{"path":"/reference/internal_function.html","id":null,"dir":"Reference","previous_headings":"","what":".pack_and_function_check — .pack_and_function_check","title":".pack_and_function_check — .pack_and_function_check","text":"Check 1) required functions present required packages 2) required packages installed locally. Simplified version saferDev::is_function_here(), used internal function functions package. Check critical operators R present packages global env. Others functions R scope can overwritten safer functions always use :: using function.","code":""},{"path":"/reference/internal_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".pack_and_function_check — .pack_and_function_check","text":"","code":".pack_and_function_check(   fun,   lib.path,   external.function.name,   external.package.name )  .base_op_check(external.function.name, external.package.name)"},{"path":"/reference/internal_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".pack_and_function_check — .pack_and_function_check","text":"fun Character vector names required functions, preceded name package belong double colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). lib.path Character vector specifying absolute pathways directories containing listed packages fun argument, default directories. NULL, function checks .libPaths() default R library folders. external.function.name Name function using .pack_and_function_check() function. external.package.name Name package function using .pack_and_function_check() function.","code":""},{"path":"/reference/internal_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".pack_and_function_check — .pack_and_function_check","text":"error message least one checked packages missing lib.path, least one checked functions missing required package, nothing otherwise. error message least one checked operator present R scope, nothing otherwise.","code":""},{"path":"/reference/internal_function.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".pack_and_function_check — .pack_and_function_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/internal_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".pack_and_function_check — .pack_and_function_check","text":"","code":"# .pack_and_function_check(fun = \"ggplot2::notgood\") # commented because this example returns an error if (FALSE) { # \\dontrun{ # Example that shouldn't be run because this is an internal function .pack_and_function_check(fun = c(\"ggplot2::geom_point\", \"grid::gpar\")) } # } if (FALSE) { # \\dontrun{ # Example that shouldn't be run because this is an internal function assign(\"!\", 1) ; .base_op_check(external.function.name = \"fun1\") # commented because this example returns an error } # }"},{"path":"/reference/mat_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"mat_fill — mat_fill","title":"mat_fill — mat_fill","text":"Detect empty half part symmetric square matrix (either topleft, topright, bottomleft bottomright). Fill empty half part using symmetric half part matrix.","code":""},{"path":"/reference/mat_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mat_fill — mat_fill","text":"","code":"mat_fill(mat, empty.cell.string = 0, warn.print = FALSE, safer_check = TRUE)"},{"path":"/reference/mat_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mat_fill — mat_fill","text":"mat numeric character square matrix half part (according grand diagonal) filled NA (kind matrix), \"0\" (character matrix) 0 (numeric matrix) exclusively (mix 0 NA empty part). empty.cell.string numeric, character NA (quotes) indicating empty cells filled . warn.print Single logical value. Print warnings end execution? print warning messages. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/mat_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mat_fill — mat_fill","text":"list containing: - $mat: filled matrix. - $warn: warning messages. Use cat() proper display. NULL warning.","code":""},{"path":"/reference/mat_fill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mat_fill — mat_fill","text":"WARNINGS plot verification using gg_heatmap() recommanded.","code":""},{"path":"/reference/mat_fill.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mat_fill — mat_fill","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/mat_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mat_fill — mat_fill","text":"","code":"# bottomleft example mat1 = matrix(c(1,NA,NA,NA, 0,2,NA,NA, NA,3,4,NA, 5,6,7,8), ncol = 4) ;  mat1 ;  #>      [,1] [,2] [,3] [,4] #> [1,]    1    0   NA    5 #> [2,]   NA    2    3    6 #> [3,]   NA   NA    4    7 #> [4,]   NA   NA   NA    8 mat_fill(mat = mat1, empty.cell.string = NA, warn.print = TRUE)  #> Warning: FROM mat_fill(): #>  #> (1) EMPTY SECTOR DETECTED ON THE BOTTOMLEFT CORNER, FULL OF NA #>  #> (2) BOTTOMLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL #> $mat #>      [,1] [,2] [,3] [,4] #> [1,]    1    0   NA    5 #> [2,]    0    2    3    6 #> [3,]   NA    3    4    7 #> [4,]    5    6    7    8 #>  #> $warn #> [1] \"(1) EMPTY SECTOR DETECTED ON THE BOTTOMLEFT CORNER, FULL OF NA\\n\\n(2) BOTTOMLEFT SECTOR HAS BEEN COMPLETED TO BECOME SYMMETRICAL\" #>"},{"path":"/reference/mat_inv.html","id":null,"dir":"Reference","previous_headings":"","what":"mat_inv — mat_inv","title":"mat_inv — mat_inv","text":"Return inverse square matrix solve() .","code":""},{"path":"/reference/mat_inv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mat_inv — mat_inv","text":"","code":"mat_inv(mat, safer_check = TRUE)"},{"path":"/reference/mat_inv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mat_inv — mat_inv","text":"mat square numeric matrix without NULL, NA, Inf single case (dimension 1, 1) 0. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/mat_inv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mat_inv — mat_inv","text":"inversed matrix.","code":""},{"path":[]},{"path":"/reference/mat_inv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mat_inv — mat_inv","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/mat_inv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mat_inv — mat_inv","text":"","code":"mat1 = matrix(c(1,1,1,2,1,5,9,8,9), ncol = 3) ; mat_inv(mat = mat1) # use solve() #>             [,1] [,2]       [,3] #> [1,] -10.3333333    9  2.3333333 #> [2,]  -0.3333333    0  0.3333333 #> [3,]   1.3333333   -1 -0.3333333  mat1 = matrix(2, ncol = 1) ; mat_inv(mat = mat1) #>      [,1] #> [1,]  0.5"},{"path":"/reference/mat_num2color.html","id":null,"dir":"Reference","previous_headings":"","what":"mat_num2color — mat_num2color","title":"mat_num2color — mat_num2color","text":"Convert matrix made numbers hexadecimal matrix rgb colorization.","code":""},{"path":"/reference/mat_num2color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mat_num2color — mat_num2color","text":"","code":"mat_num2color(   mat1,   mat.hsv.h = TRUE,   notch = 1,   s = 1,   v = 1,   forced.color = NULL,   safer_check = TRUE )"},{"path":"/reference/mat_num2color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mat_num2color — mat_num2color","text":"mat1 Matrix 1 non negative numerical values colored (matrix class). NA allowed. mat.hsv.h Single logical value. mat1 h hsv colors ? (TRUE, mat1 must zero 1). FALSE, mat1 must made positive integer values without 0. notch Single value 0 1 shift successive colors hsv circle + notch. s S argument hsv(). Single numeric value 0 1. v V argument hsv(). Single numeric value 0 1. forced.color Must NULL hexadecimal color code name given colors(). first minimal values mat1 colors. color mat1 can forced using argument. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/mat_num2color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mat_num2color — mat_num2color","text":"list containing: - $mat1.name: name mat1 - $colored.mat: colors mat1 hexa - $problem: logical. colors forced.color overlap colors designed function. NULL forced.color = NULL - $text.problem: text overlapping colors. NULL forced.color = NULL problem == FALSE","code":""},{"path":"/reference/mat_num2color.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mat_num2color — mat_num2color","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/mat_num2color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mat_num2color — mat_num2color","text":"","code":"mat1 = matrix(c(1,1,1,2,1,5,9,NA), ncol = 2) ;  dimnames(mat1) <- list(LETTERS[1:4], letters[1:2]) ;  mat_num2color(mat1, mat.hsv.h = FALSE, notch = 1, s = 1, v = 1, forced.color = NULL) #> $mat1.name #> [1] \"mat1\" #>  #> $colored.mat #>   a         b         #> A \"#FFAA00\" \"#FFAA00\" #> B \"#FFAA00\" \"#00AAFF\" #> C \"#FFAA00\" \"#FF0000\" #> D \"#AAFF00\" NA        #>  #> $problem #> NULL #>  #> $text.problem #> NULL #>"},{"path":"/reference/mat_op.html","id":null,"dir":"Reference","previous_headings":"","what":"mat_op — mat_op","title":"mat_op — mat_op","text":"Assemble several matrices dimensions performing case operation. instance, kind..operation = \"+\", function add value case 1 (row1 & column1) matrices put case 1 new matrix M, according formula $$c_{ij} = \\sum_{k=1}^{k=z}c_{ijk}$$ c: case : row number j: column number k: matrix number z: number matrices","code":""},{"path":"/reference/mat_op.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mat_op — mat_op","text":"","code":"mat_op(mat.list, kind.of.operation = \"+\", safer_check = TRUE)"},{"path":"/reference/mat_op.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mat_op — mat_op","text":"mat.list List matrices. kind..operation Either \"+\" (case addition), \"-\" (case subtraction) \"*\" (case multiplication). safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/mat_op.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mat_op — mat_op","text":"assembled matrix, row /column names matrices identical row/column names.","code":""},{"path":"/reference/mat_op.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mat_op — mat_op","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/mat_op.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mat_op — mat_op","text":"","code":"mat1 = matrix(c(1,1,1,2,1,5,9,8), ncol = 2) ;  mat2 = matrix(c(1,1,1,2,1,5,9,NA), ncol = 2) ;  mat_op(mat.list = list(mat1, mat2), kind.of.operation = \"+\") #>      [,1] [,2] #> [1,]    2    2 #> [2,]    2   10 #> [3,]    2   18 #> [4,]    4   NA"},{"path":"/reference/mat_rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"mat_rotate — mat_rotate","title":"mat_rotate — mat_rotate","text":"90° clockwise matrix rotation. Applied twice, function provide mirror matrix, according vertical horizontal symmetry.","code":""},{"path":"/reference/mat_rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mat_rotate — mat_rotate","text":"","code":"mat_rotate(data, safer_check = TRUE)"},{"path":"/reference/mat_rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mat_rotate — mat_rotate","text":"data Matrix (matrix class). safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/mat_rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mat_rotate — mat_rotate","text":"modified matrix.","code":""},{"path":"/reference/mat_rotate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mat_rotate — mat_rotate","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/mat_rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mat_rotate — mat_rotate","text":"","code":"obs <- matrix(1:10, ncol = 1) ; obs ; mat_rotate(obs) #>       [,1] #>  [1,]    1 #>  [2,]    2 #>  [3,]    3 #>  [4,]    4 #>  [5,]    5 #>  [6,]    6 #>  [7,]    7 #>  [8,]    8 #>  [9,]    9 #> [10,]   10 #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> [1,]   10    9    8    7    6    5    4    3    2     1  obs <- matrix(LETTERS[1:10], ncol = 5) ; obs ; mat_rotate(obs) #>      [,1] [,2] [,3] [,4] [,5] #> [1,] \"A\"  \"C\"  \"E\"  \"G\"  \"I\"  #> [2,] \"B\"  \"D\"  \"F\"  \"H\"  \"J\"  #>      [,1] [,2] #> [1,] \"B\"  \"A\"  #> [2,] \"D\"  \"C\"  #> [3,] \"F\"  \"E\"  #> [4,] \"H\"  \"G\"  #> [5,] \"J\"  \"I\""}]
