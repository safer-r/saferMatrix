% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mat_num2color.R
\name{mat_num2color}
\alias{mat_num2color}
\title{mat_num2color}
\usage{
mat_num2color(
  mat1,
  mat.hsv.h = TRUE,
  notch = 1,
  s = 1,
  v = 1,
  forced.color = NULL
)
}
\arguments{
\item{mat1}{Matrix 1 of non negative numerical values that has to be colored (matrix class). NA allowed.}

\item{mat.hsv.h}{Single logical value. Is mat1 the h of hsv colors ? (if TRUE, mat1 must be between zero and 1). If FALSE, mat1 must be made of positive integer values without 0.}

\item{notch}{Single value between 0 and 1 to shift the successive colors on the hsv circle by + notch.}

\item{s}{S argument of hsv(). Single numeric value between 0 and 1.}

\item{v}{V argument of hsv(). Single numeric value between 0 and 1.}

\item{forced.color}{Must be NULL or hexadecimal color code or name given by colors(). The first minimal values of mat1 will be these colors. All the color of mat1 can be forced using this argument.}
}
\value{
A list containing:
- $mat1.name: name of mat1
- $colored.mat: colors of mat1 in hexa
- $problem: logical. Is any colors of forced.color overlap the colors designed by the function. NULL if forced.color = NULL
- $text.problem: text when overlapping colors. NULL if forced.color = NULL or problem == FALSE
}
\description{
Convert a matrix made of numbers into a hexadecimal matrix for rgb colorization.
}
\details{
REQUIRED PACKAGES

cuteDev

REQUIRED FUNCTIONS FROM THE cute PACKAGE

arg_check()
}
\examples{
mat1 = matrix(c(1,1,1,2,1,5,9,NA), ncol = 2) ; 
dimnames(mat1) <- list(LETTERS[1:4], letters[1:2]) ; 
mat_num2color(mat1, mat.hsv.h = FALSE, notch = 1, s = 1, v = 1, forced.color = NULL)
}
